name: Build Intersect

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

env:
  VERSION_PREFIX: 0.7.2
  VERSION_SUFFIX: -beta.

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3.1
      with:
        msbuild-architecture: x64

    - name: Setup NuGet.exe for use with actions
      # You may pin to the exact commit or the version.
      # uses: NuGet/setup-nuget@fd9fffd6ca4541cf4152a9565835ca1a88a6eb37
      uses: NuGet/setup-nuget@v1.1.1
      with:
        # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
        nuget-version: latest # optional, default is latest
        # NuGet API Key to configure.
        # nuget-api-key: # optional
        # Source to scope the NuGet API Key to.
        # nuget-api-key-source: # optional

    # - run: nuget locals all -list

    - name: Cache binaries
      uses: actions/cache@v3.2.6
      id: cache-binaries
      with:
        path: |
          Intersect*/bin/Release/**/Intersect*
        key: ${{ runner.os }}-nuget-${{ hashFiles('Intersect.*/*.csproj') }}

    - name: Cache NuGet dependencies
      uses: actions/cache@v3.2.6
      id: cache
      if: steps.cache-binaries.outputs.cache-hit != 'true'
      with:
        path: "~/.nuget/packages"
        key: ${{ runner.os }}-nuget-${{ hashFiles('Intersect.*/*.csproj') }}

    - name: Restore NuGet Packages
      if: steps.cache.outputs.cache-hit != 'true' || steps.cache-binaries.outputs.cache-hit != 'true'
      run: nuget restore Intersect.sln

    # - run: ls -R ~/.nuget/packages
    # - run: ls -R

    - name: Build solution
      if: steps.cache-binaries.outputs.cache-hit != 'true'
      run: msbuild Intersect.sln /p:Configuration=Release /p:PackageVersion=${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}${{ github.run_number }}+build.${{ github.sha }} /p:Version=0.7.2.${{ github.run_number }}

    - name: Package artifacts
      run: |
        mkdir intersect-engine
        mkdir intersect-engine/client
        mkdir intersect-engine/editor
        mkdir intersect-engine/server
        Copy-Item -Path "Intersect.Client/LICENSE.md" -Destination "intersect-engine/client"
        Copy-Item -Path "Intersect.Client/bin/Release/**/Intersect Client.exe*" -Destination "intersect-engine/client"
        Copy-Item -Path "Intersect.Client/bin/Release/**/Intersect Client.pdb" -Destination "intersect-engine/client"
        Copy-Item -Path "Intersect.Editor/LICENSE.md" -Destination "intersect-engine/editor"
        Copy-Item -Path "Intersect.Editor/bin/Release/**/Intersect Editor.exe*" -Destination "intersect-engine/editor"
        Copy-Item -Path "Intersect.Editor/bin/Release/**/Intersect Editor.pdb" "intersect-engine/editor"
        Copy-Item -Path "Intersect.Server/LICENSE.md" -Destination "intersect-engine/server"
        Copy-Item -Path "Intersect.Server/bin/Release/**/Intersect Server.exe*" -Destination "intersect-engine/server"
        Copy-Item -Path "Intersect.Server/bin/Release/**/Intersect Server.pdb" -Destination "intersect-engine/server"
        Copy-Item -Path "AUTHORS.md" -Destination "intersect-engine"
        Copy-Item -Path "LICENSE.md" -Destination "intersect-engine"
        Copy-Item -Path "README.md" -Destination "intersect-engine"
        Copy-Item -Path "Documentation" -Destination "intersect-engine" -Recurse
        Compress-Archive -Path "intersect-engine" -DestinationPath "intersect-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}${{ github.run_number }}+build.${{ github.sha }}.zip"

    # - name: Upload artifacts
    #   uses: actions/upload-artifact@v3.1.2
    #   with:
    #     if-no-files-found: error
    #     name: intersect-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}${{ github.run_number }}+build.${{ github.sha }}
    #     path: |
    #       AUTHORS.md
    #       Documentation/**
    #       Intersect.*/LICENSE.md
    #       Intersect.Client/bin/Release/**/Intersect Client.*
    #       Intersect.Editor/bin/Release/**/Intersect Editor.*
    #       Intersect.Server/bin/Release/**/Intersect Server.*
    #       LICENSE.md
    #       README.md
    #       !Intersect.*/bin/Release/**/*.xml
    #       !Intersect.*/bin/Release/**/*.runtimeconfig.*
    #     retention-days: 1

    # - name: Download artifacts
    #   uses: actions/download-artifact@v3
    #   with:
    #     name: intersect-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}${{ github.run_number }}+build.${{ github.sha }}
    #     path: artifacts

    # - run: ls -R

    - name: Publish Release
      uses: softprops/action-gh-release@v0.1.15
      with:
        files: "intersect-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}${{ github.run_number }}+build.${{ github.sha }}.zip"
        generate_release_notes: true
        prerelease: true
        name: ${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}${{ github.run_number }}
        tag_name: v${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}${{ github.run_number }}
